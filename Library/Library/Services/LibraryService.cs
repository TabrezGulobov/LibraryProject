using System;
using Library.Entites;
using Library.InterFace;

namespace Library.Services;

public class LibraryService
{
    public List<User> RegisteredUsers { get; set; } = new List<User>();
    public User CurrentUser { get; set; } = null;
    public List<Book> Books { get; set; } = new List<Book>();
    public bool Registration(string username, string password)
    {
        if (RegisteredUsers.Any(user => user.UserName == username))
        {
            Console.WriteLine("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.‚ùå");
            return false;
        }

        var newUser = new User(username, password, Role.User);
        RegisteredUsers.Add(newUser);
        Console.WriteLine($"‚úÖ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.‚úÖ");
        return true;
    }
    public bool Login(string username, string password)
    {
        var user = RegisteredUsers.FirstOrDefault(user => user.UserName == username && user.Password == password);
        if (user == null)
        {
            Console.WriteLine("–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å ‚ùó");
            return false;
        }

        CurrentUser = user;
        Console.WriteLine($"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username} ‚ùï");
        return true;
    }
    public void GetAccountInfo(string userName)
    {
        var user = RegisteredUsers.FirstOrDefault(u => u.UserName == userName);
        if (user == null)
        {
            Console.WriteLine("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.ü§∑");
            return;
        }
        
    }
    public void AddBook(string title, string author, string genre, int year)
    { 
        var newBook = new Book(title, author, genre, year); 
        Books.Add(newBook); 
        Console.WriteLine($"üìö –ö–Ω–∏–≥–∞ {title} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É.");
    }
    
    public List<Book> SearchBooks(string Title, string Author, string Genre, int Year)
    {
        string choosenGenre = Genre;
        string choosenTitle = Title;
        string choosenAuthor = Author;
        int choosenYear = Year;
        
        List<Book> filteredBooks = new List<Book>();
        foreach (var book in Books)
        {
            if (book.Title == choosenTitle && book.Genre == choosenGenre && book.Author == choosenAuthor)
            {
                filteredBooks.Add(book);
            }
            Console.WriteLine($"–í–æ—Ç –ø–æ—Ö–æ–∂–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É {book.Title}, {book.Genre}, {book.Author} üìö");
        }
        return Books;
    }
}   